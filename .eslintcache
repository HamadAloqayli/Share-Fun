[{"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\index.js":"1","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\App.js":"2","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\reportWebVitals.js":"3","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Signup.jsx":"4","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Login.jsx":"5","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\NavBar.jsx":"6","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\Firebase.js":"7","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Home.jsx":"8","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\contexts\\userContext.js":"9","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Profile.jsx":"10","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Movies.jsx":"11","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Groups.jsx":"12","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Favorite.jsx":"13","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\FavMovies.jsx":"14","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\GroupMovies.jsx":"15","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Group.jsx":"16","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Series.jsx":"17","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\FavSeries.jsx":"18","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\GroupSeries.jsx":"19"},{"size":426,"mtime":1608922183042,"results":"20","hashOfConfig":"21"},{"size":2439,"mtime":1615402522012,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":5529,"mtime":1611352931152,"results":"24","hashOfConfig":"21"},{"size":2908,"mtime":1611600682178,"results":"25","hashOfConfig":"21"},{"size":6056,"mtime":1615314599574,"results":"26","hashOfConfig":"21"},{"size":715,"mtime":1609013711117,"results":"27","hashOfConfig":"21"},{"size":474,"mtime":1614016123331,"results":"28","hashOfConfig":"21"},{"size":87,"mtime":1609015120570,"results":"29","hashOfConfig":"21"},{"size":3667,"mtime":1611600759253,"results":"30","hashOfConfig":"21"},{"size":14124,"mtime":1615406076891,"results":"31","hashOfConfig":"21"},{"size":14659,"mtime":1615403559204,"results":"32","hashOfConfig":"21"},{"size":1263,"mtime":1613916154811,"results":"33","hashOfConfig":"21"},{"size":1882,"mtime":1613928132369,"results":"34","hashOfConfig":"21"},{"size":2261,"mtime":1615406300476,"results":"35","hashOfConfig":"21"},{"size":1354,"mtime":1613916347188,"results":"36","hashOfConfig":"21"},{"size":14115,"mtime":1615404063478,"results":"37","hashOfConfig":"21"},{"size":1882,"mtime":1613928129289,"results":"38","hashOfConfig":"21"},{"size":1837,"mtime":1614011150871,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"hfck4z",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\index.js",[],["89","90"],"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\App.js",["91"],"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\reportWebVitals.js",[],"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Signup.jsx",["92"],"import {useRef,useState,useContext} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {userContext} from '../contexts/userContext';\r\n\r\n\r\nconst Signup = () => {\r\n\r\n    const {user,auth,firestore} = useContext(userContext);\r\n\r\n    const [message,setMessage] = useState('');\r\n\r\n    const username = useRef('');\r\n    const email = useRef('');\r\n    const password = useRef('');\r\n    const confirmPassword = useRef('');\r\n    const gender1 = useRef('');\r\n    const gender2 = useRef('');\r\n\r\n    const handleSignup = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let gender = \"\";\r\n        let numDocs = 0;\r\n        let users = [];\r\n        let usernameVal = username.current.value;\r\n        let emailVal = email.current.value;\r\n\r\n        await firestore.collection(\"Users\").get()\r\n        .then((res) => {\r\n            numDocs = res.docs.length;\r\n            users = res.docs;\r\n        });\r\n\r\n        if(gender1.current.checked !== false || gender2.current.checked !== false)\r\n        {\r\n            if(gender1.current.checked === true)\r\n            {\r\n                gender = 'Male';\r\n            }\r\n            else\r\n            {\r\n                gender = 'Female';\r\n            }\r\n        }\r\n\r\n        if(username.current.value.trim() === \"\" || email.current.value.trim() === \"\" || password.current.value.trim() === \"\" || confirmPassword.current.value.trim() === \"\" || gender.trim() === \"\")\r\n        {\r\n            setMessage('All fields are required!');\r\n            return;\r\n        }\r\n        else if(password.current.value !== confirmPassword.current.value)\r\n        {\r\n            setMessage('The password and the confirmation must be identical');\r\n            return;\r\n        }\r\n        \r\n        for(let i = 0; i < numDocs; i++)\r\n        {\r\n            if(users[i].data().username === username.current.value)\r\n            {\r\n                setMessage('The username has been used already');\r\n                return;\r\n            }\r\n        }\r\n\r\n        auth.createUserWithEmailAndPassword(email.current.value,password.current.value)\r\n        .then((res) => {\r\n\r\n            console.log(res);\r\n            console.log(res.user.uid);\r\n            console.log('user has been created');\r\n\r\n          firestore.collection(\"Users\").doc(res.user.uid).set({\r\n                username: usernameVal,\r\n                email: emailVal,\r\n                gender: gender\r\n            });\r\n\r\n            setMessage('');\r\n            e.target.reset();\r\n            return;\r\n        })\r\n        .catch((res) => {\r\n            switch(res.code){\r\n                case \"auth/email-already-in-use\":\r\n                case \"auth/invalid-email\":\r\n                    setMessage(res.message);\r\n                    break;\r\n                case \"auth/weak-password\":\r\n                    setMessage(res.message);\r\n                    break;\r\n            }\r\n            return;\r\n        });\r\n        \r\n    }\r\n\r\n    if(user)\r\n        return <Redirect to='/' />\r\n\r\n        \r\n    return (\r\n        <div className=\"loginHero\">\r\n        <div className=\"loginContainer\">\r\n            <h1 className=\"mb-5 display-4\">Sign up</h1>\r\n\r\n            <span style={{color:'#FF5F5C'}}>{message}</span>\r\n\r\n            <form action=\"\" onSubmit={handleSignup}>\r\n            <div className=\"form__group field my-4 w-100\">\r\n                    <input ref={username} type=\"text\" className=\"form__field\" placeholder=\"Username\" name=\"Username\" id='Username'/>\r\n                    <label htmlFor=\"Username\" className=\"form__label\">Username</label>\r\n                </div>\r\n\r\n                <div className=\"form__group field my-4 w-100\">\r\n                    <input ref={email} type=\"email\" className=\"form__field\" placeholder=\"Email\" name=\"Email\" id='Email'/>\r\n                    <label htmlFor=\"Email\" className=\"form__label\">Email</label>\r\n                </div>\r\n\r\n                <div className=\"form__group field my-4 w-100\">\r\n                    <input ref={password} type=\"Password\" className=\"form__field\" placeholder=\"Password\" name=\"Password\" id='Password'/>\r\n                    <label htmlFor=\"Password\" className=\"form__label\">Password</label>\r\n                </div>\r\n\r\n                <div className=\"form__group field my-4 w-100\">\r\n                    <input ref={confirmPassword} type=\"Password\" className=\"form__field\" placeholder=\"Confirm password\" name=\"Confirm password\" id='Confirm password'/>\r\n                    <label htmlFor=\"Confirm password\" className=\"form__label\">Confirm password</label>\r\n                </div>\r\n\r\n            <div className='radioHolder my-4'>\r\n                    <label>\r\n                        <input ref={gender1} type=\"radio\" value=\"Male\" name=\"radio\" id=\"radio1\" />\r\n                        <span className=\"design\"></span>\r\n                        <span className=\"text ml-2\">Male</span>\r\n                    </label>\r\n    \r\n                    <label>\r\n                        <input ref={gender2} type=\"radio\" value=\"Female\" name=\"radio\" id=\"radio2\"  />\r\n                        <span className=\"design\"></span>\r\n                        <span className=\"text ml-2\">Female</span>\r\n                    </label>\r\n            </div>\r\n\r\n            <span className=\"swichPage my-4\">\r\n                Have an account ? <Link className=\"logupBtn\" to=\"/Login\" style={{color:' #9b9b9b'}}>Login</Link>\r\n            </span>\r\n\r\n                <input className=\"form-control mt-4\" type=\"submit\" value=\"Submit\"/>\r\n            </form>\r\n\r\n        </div>\r\n</div>\r\n     );\r\n}\r\n \r\nexport default Signup;","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Login.jsx",["93"],"import {useState,useRef,useContext} from 'react';\r\nimport {userContext} from '../contexts/userContext';\r\nimport {Link,Redirect} from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n\r\n    const {user,auth} = useContext(userContext);\r\n\r\n    const [message,setMessage] = useState('');\r\n\r\n    const email = useRef('');\r\n    const password = useRef('');\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(email.current.value.trim() === \"\" || password.current.value.trim() === \"\")\r\n        {\r\n            setMessage('All fields are required!');\r\n            return;\r\n        }\r\n\r\n        auth.signInWithEmailAndPassword(email.current.value,password.current.value)\r\n        .then((res) => {\r\n\r\n            console.log(res);\r\n            console.log('user has been loged In');\r\n\r\n            setMessage('');\r\n            e.target.reset();\r\n            return;\r\n        })\r\n        .catch((res) => {\r\n            switch(res.code){\r\n                case \"auth/invalid-email\":\r\n                case \"auth/user-disabled\":\r\n                case \"auth/user-not-found\":\r\n                    setMessage(res.message);\r\n                    break;\r\n                case \"auth/wrong-password\":\r\n                    setMessage(res.message);\r\n                    break;\r\n            }\r\n            return;\r\n        });\r\n\r\n    }\r\n\r\n    if(user)\r\n        return <Redirect to='/' />\r\n\r\n    return ( \r\n        <div className=\"loginHero\">\r\n                    <div className=\"loginContainer\">\r\n                        <h1 className=\"mb-5 display-4\">Login</h1>\r\n        \r\n                        <span style={{color:'#FF5F5C'}}>{message}</span>\r\n\r\n                        <form action=\"\" onSubmit={handleLogin}>\r\n                            <div className=\"form__group field my-4 w-100\">\r\n                                <input ref={email} type=\"email\" className=\"form__field\" placeholder=\"Email\" name=\"Email\" id='Email' required />\r\n                                <label htmlFor=\"Email\" className=\"form__label\">Email</label>\r\n                            </div>\r\n        \r\n                            <div className=\"form__group field my-4 w-100\">\r\n                                <input ref={password} type=\"Password\" className=\"form__field\" placeholder=\"Password\" name=\"Password\" id='Password' required />\r\n                                <label htmlFor=\"Password\" className=\"form__label\">Password</label>\r\n                            </div>\r\n\r\n                            <span className=\"swichPage my-4\">\r\n                                Don't have an account ? <Link className=\"logupBtn\" to=\"/Signup\" style={{color:\"#9b9b9b\"}}>Sign up</Link>\r\n                            </span>\r\n        \r\n                            <input className=\"form-control mt-4\" type=\"submit\" value=\"Submit\"/>\r\n                        </form>\r\n\r\n                    </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Login;","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\NavBar.jsx",[],"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\Firebase.js",[],"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Home.jsx",["94"],"import {useContext} from 'react';\r\nimport {userContext} from '../contexts/userContext';\r\nimport Movies from './Movies';\r\nimport Series from './Series';\r\n\r\nconst Home = () => {\r\n\r\n    const {user,selection} = useContext(userContext);\r\n\r\n\r\n    if(selection === \"M\")\r\n    return ( \r\n        <>\r\n\r\n            <Movies />\r\n\r\n        </>\r\n     );\r\n\r\n     else\r\n     return ( \r\n         <>\r\n\r\n            <Series />\r\n            \r\n         </>\r\n      );\r\n}\r\n \r\nexport default Home;","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\contexts\\userContext.js",[],"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Profile.jsx",["95"],"import {useState,useEffect,useContext} from 'react';\r\nimport {userContext} from '../contexts/userContext';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport profileImgMaleB from '../img/profileImg_maleB.png';\r\nimport profileImgFemaleB from '../img/profileImg_femaleB.png';\r\n\r\nconst Profile = () => {\r\n\r\n    const [loading,setLoading] = useState(true); \r\n    const [message,setMessage] = useState(\"\");\r\n    const {user,setUser,userData,setUserData,getUserData,auth} = useContext(userContext);\r\n\r\n    useEffect(() => {\r\n        authState();\r\n      },[]);\r\n    \r\n      const authState = () => {\r\n        auth.onAuthStateChanged((user) => {\r\n          if(user)\r\n          {\r\n              setUser(user);\r\n              getUserData(user.uid);\r\n          }\r\n          else\r\n          {\r\n              setUser(null);\r\n              setUserData({});\r\n          }\r\n          setLoading(false);\r\n        });\r\n      }\r\n\r\n      const resetPassword = () => {\r\n\r\n\r\n            auth.sendPasswordResetEmail(userData.email).then(function() {\r\n                setMessage(\"We have sent you the reset password to your email\");\r\n            }).catch(function(error) {\r\n                setMessage(\"Something went wrong!\");\r\n            });\r\n      }\r\n\r\n      if(loading)\r\n        return <h1>Loading ...</h1>\r\n        \r\n        \r\n            if(!user)\r\n                return <Redirect to='/' />\r\n\r\n            return ( \r\n                    <div className=\"profileHero\">\r\n                        <div className=\"profileContainer\">\r\n                            \r\n                            <img src={(userData.gender === 'Male')?profileImgMaleB:profileImgFemaleB} alt=\"\"/>\r\n    \r\n                            <span style={{color:'#f4f4f4'}}>{message}</span>\r\n\r\n\r\n                            <span className=\"mt-4 mb-1 ml-4\">Username</span>\r\n                            <p className=\"mx-auto py-2\">{userData.username}</p>\r\n    \r\n                            <span className=\"mt-4 mb-1 ml-4\">Email</span>\r\n                            <p className=\"mx-auto py-2\">{userData.email}</p>\r\n    \r\n                            <button type=\"button\" className=\"btn resetPassword mt-4\" data-toggle=\"modal\" data-target=\"#exampleModal\">Reset password</button>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Reset password</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                Are you sure you want to reset your password ?\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn\" data-dismiss=\"modal\">No</button>\r\n                                <button type=\"button\" className=\"btn\" data-dismiss=\"modal\" onClick={() => resetPassword()}>Yes</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n            );\r\n        \r\n}\r\n \r\nexport default Profile;","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Movies.jsx",["96","97","98","99","100","101","102","103","104","105","106","107"],"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Groups.jsx",["108","109","110","111","112","113","114"],"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Favorite.jsx",["115","116"],"import {useContext,useEffect, useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {userContext} from '../contexts/userContext';\r\nimport FavMovies from './FavMovies';\r\nimport FavSeries from './FavSeries';\r\n\r\nconst Favorite = () => {\r\n\r\n    const {user,setUser,userData,setUserData,getUserData,auth,firestore,selection} = useContext(userContext);\r\n\r\n    const [loading,setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        authState();\r\n      },[]);\r\n\r\n\r\n      const authState = () => {\r\n        auth.onAuthStateChanged((user) => {\r\n          if(user)\r\n          {\r\n              setUser(user);\r\n              getUserData(user.uid);\r\n          }\r\n          else\r\n          {\r\n              setUser(null);\r\n              setUserData({});\r\n          }\r\n          setLoading(false);\r\n        });\r\n      }\r\n\r\n\r\n      if(loading)\r\n        return <h1>Loading ...</h1>\r\n\r\n    \r\n     if(!user)\r\n        return <Redirect to=\"/\" />\r\n\r\n\r\n    if(selection === \"M\")\r\n    return ( \r\n        <>\r\n                <FavMovies user={user} firestore={firestore} />\r\n        </>\r\n     );\r\n\r\n     else\r\n     return ( \r\n         <>\r\n                <FavSeries user={user} firestore={firestore} />\r\n         </>\r\n      );\r\n\r\n}\r\n \r\nexport default Favorite;","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\FavMovies.jsx",["117","118","119"],"import {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { MdStar } from \"react-icons/md\";\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { BiError } from 'react-icons/bi';\r\n\r\nconst FavMovies = (props) => {\r\n\r\n    const {user,firestore} = props;\r\n\r\n    const tmdbKey = '6500ae4de9339a92cbef501c636fc2c0';\r\n    const [movies,setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        getMovies();\r\n    },[]);\r\n\r\n    const getMovies = () => {\r\n\r\n        firestore.collection('Users').doc(user.uid).collection('movies').onSnapshot(collection => {\r\n\r\n            setMovies(collection.docs);\r\n        })\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className=\"moviesHero text-center\">\r\n            <div className=\"moviesContainer text-center py-4 px-lg-5 container-fluid\">\r\n                    <div className=\"row text-center py-4 px-lg-5\">\r\n                            {(movies.length !== 0)?movies.map(movie => (\r\n                                <div className=\"movieCard my-4 text-center col position-relative\" key={uuidv4()}>\r\n                                    <div className=\"text-center MCSon\">\r\n                                        <img src={`https://image.tmdb.org/t/p/w300/${movie.data().poster_path}`} alt=\"\"/>\r\n                                        <p className=\"movieDetail\">{movie.data().title}</p>\r\n                                        <span className=\"movieDetail\"><MdStar className=\"mb-1 mr-1\" style={{color:'gold'}} />{movie.data().vote_average}</span>\r\n                                    </div>\r\n                                </div>)\r\n                            ):<div className=\"mx-auto mt-5 text-white-50\"> <BiError style={{fontSize: '42px'}} className=\"mt-5 mb-3\" />  <h5>Sorry, there is no data to display</h5>  </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n     );\r\n}\r\n \r\nexport default FavMovies;","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\GroupMovies.jsx",["120","121","122"],"C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Group.jsx",["123","124"],"import {useContext,useEffect, useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {userContext} from '../contexts/userContext';\r\nimport GroupMovies from './GroupMovies';\r\nimport GroupSeries from './GroupSeries';\r\n\r\nconst Group = (props) => {\r\n\r\n    const {user,setUser,userData,setUserData,getUserData,auth,firestore,selection} = useContext(userContext);\r\n\r\n    const groupID = props.match.params.id;\r\n    const [loading,setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        authState();\r\n      },[]);\r\n\r\n\r\n      const authState = () => {\r\n        auth.onAuthStateChanged((user) => {\r\n          if(user)\r\n          {\r\n              setUser(user);\r\n              getUserData(user.uid);\r\n          }\r\n          else\r\n          {\r\n              setUser(null);\r\n              setUserData({});\r\n          }\r\n          setLoading(false);\r\n        });\r\n      }\r\n\r\n\r\n      if(loading)\r\n        return <h1>Loading ...</h1>\r\n\r\n    \r\n     if(!user)\r\n        return <Redirect to=\"/\" />\r\n\r\n\r\n    if(selection === \"M\")\r\n    return ( \r\n        <>\r\n                <GroupMovies user={user} firestore={firestore} groupID={groupID} />\r\n        </>\r\n     );\r\n\r\n     else\r\n     return ( \r\n         <>\r\n                <GroupSeries user={user} firestore={firestore} groupID={groupID} />\r\n         </>\r\n      );\r\n\r\n}\r\n \r\nexport default Group;","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\Series.jsx",["125","126","127","128","129","130","131","132","133","134","135","136"],"import {useState,useEffect, useRef, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { MdStar } from \"react-icons/md\";\r\nimport { BiSearch } from 'react-icons/bi';\r\nimport { MdGroup } from \"react-icons/md\";\r\nimport {BsArrowLeft} from 'react-icons/bs';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {userContext} from '../contexts/userContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Series = () => {\r\n\r\n    const tmdbKey = '6500ae4de9339a92cbef501c636fc2c0';\r\n    const [movies,setMovies] = useState([]);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const [groups,setGroups] = useState([]);\r\n    const [errMessage,setErrMessage] = useState('');\r\n    const [sucMessage,setSucMessage] = useState('');\r\n\r\n    const {user,setUser,userData,setUserData,getUserData,auth,firestore} = useContext(userContext);\r\n\r\n    const inputMovie = useRef('');\r\n    const groupsList = useRef([]);\r\n    const menusList = useRef([]);\r\n\r\n    useEffect(() => {\r\n\r\n        window.scrollTo(0,0);\r\n        getPopularMovie();\r\n\r\n    },[currentPage]);\r\n\r\n\r\n    useEffect(() => {\r\n        authState();\r\n      },[]);\r\n\r\n\r\n      const authState = () => {\r\n        auth.onAuthStateChanged((user) => {\r\n          if(user)\r\n          {\r\n              setUser(user);\r\n              getUserData(user.uid);\r\n              \r\n              getGroups(user);\r\n          }\r\n          else\r\n          {\r\n              setUser(null);\r\n              setUserData({});\r\n          }\r\n        //   setLoading(false);\r\n        //   setLoadingData(false);\r\n        });\r\n      }\r\n\r\n\r\n    const getPopularMovie = () => {\r\n\r\n        axios.get(`https://api.themoviedb.org/3/tv/popular?api_key=${tmdbKey}&page=${currentPage}`)\r\n        .then(res => {console.log(res.data); setMovies(res.data.results)})\r\n        .catch(res => console.log(res));\r\n    }\r\n\r\n    const getMovie = () => {\r\n\r\n        let findMovie = inputMovie.current.value;\r\n\r\n        if(findMovie.trim() !== '')\r\n        {\r\n            axios.get(`https://api.themoviedb.org/3/search/tv?api_key=${tmdbKey}&query=${findMovie}&page=1`)\r\n            .then(res => {console.log(res.data); setMovies(res.data.results)})\r\n            .catch(res => console.log(res));\r\n        }\r\n        else\r\n        {\r\n            setCurrentPage(1);\r\n            getPopularMovie();\r\n        }\r\n\r\n    }\r\n\r\n    const getGroups = async (user) => {\r\n\r\n        let userName = '';\r\n\r\n        await firestore.collection('Users').get()\r\n            .then(collection => {\r\n                for(let i = 0; i < collection.docs.length; i++)\r\n                {\r\n                    if(collection.docs[i].id === user.uid)\r\n                    {\r\n                        userName = collection.docs[i].data().username\r\n                    }\r\n                }\r\n         })\r\n         .catch(res => console.log(res));\r\n\r\n         let groupList = firestore.collection('Groups');\r\n            \r\n         groupList.get()\r\n             .then(collection => {\r\n\r\n                 for(let i = 0; i < collection.docs.length; i++)\r\n                 {\r\n                 groupList.doc(collection.docs[i].id).collection('users').get()\r\n                     .then(result => {\r\n\r\n                         for(let k = 0; k < result.docs.length; k++)\r\n                         {\r\n                             if(result.docs[k].data().username === userName)\r\n                             {\r\n                                 setGroups(groups => [...groups,collection.docs[i]]);\r\n                             }\r\n                         }\r\n                 })\r\n                 .catch(res => console.log(res));\r\n                 } \r\n         })\r\n         .catch(res => console.log(res));\r\n    }\r\n\r\n    const showGroups = (mov) => {\r\n\r\n        for(let i = 0; i < groupsList.current.length; i++)\r\n        {\r\n            if(groupsList.current[i] !== null && groupsList.current[i].dataset.type === mov.id.toString())\r\n            {\r\n                groupsList.current[i].style = \"left: 0\";\r\n                menusList.current[i].style = \"left: 200%\";\r\n            }\r\n            else if(groupsList.current[i] !== null)\r\n            {\r\n                groupsList.current[i].style = \"left: 100%\";\r\n                menusList.current[i].style = \"left: 50%\";\r\n            }\r\n        }\r\n\r\n    }\r\n    const hideGroups = (mov) => {\r\n\r\n        for(let i = 0; i < groupsList.current.length; i++)\r\n        {\r\n            if(groupsList.current[i] !== null && groupsList.current[i].dataset.type === mov.id.toString())\r\n            {\r\n                groupsList.current[i].style = \"left: 100%\";\r\n                menusList.current[i].style = \"left: 50%\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const shareWithGroup = (groupID,groupName,movie) => {\r\n\r\n        firestore.collection('Groups').doc(groupID).collection('series').where('id','==',movie.id).get()\r\n        .then(res => {\r\n            \r\n            if(res.empty)\r\n            {\r\n                firestore.collection('Groups').doc(groupID).collection('series').add({\r\n                    id: movie.id,\r\n                    poster_path: movie.poster_path,\r\n                    title: movie.name,\r\n                    vote_average: movie.vote_average,\r\n                    createdBy: user.uid,\r\n                    createdAt: new Date().getTime()\r\n                })\r\n                .then(res => {\r\n                    hideGroups(movie);\r\n                    tempShowMessage(`${movie.name} series shared with ${groupName} group`,'suc');\r\n                })\r\n                .catch(res => {\r\n                    tempShowMessage('something went wrong!','err');\r\n                });\r\n            }\r\n            else\r\n            {\r\n                tempShowMessage(`${movie.name} series is already exists in ${groupName} group`,'err');\r\n            }\r\n            \r\n        })\r\n        .catch(res => {\r\n            tempShowMessage('somethig went wrong!','err');\r\n        });\r\n    }\r\n\r\n    const addToFavorite = (movie) => {\r\n    \r\n        if(user)\r\n        {\r\n            firestore.collection('Users').doc(user.uid).collection('series').where('id','==',movie.id).get()\r\n            .then(res => {\r\n    \r\n                if(res.empty)\r\n                {\r\n                    firestore.collection('Users').doc(user.uid).collection('series').add({\r\n                        id: movie.id,\r\n                        poster_path: movie.poster_path,\r\n                        title: movie.name,\r\n                        vote_average: movie.vote_average,\r\n                        createdBy: user.uid,\r\n                        createdAt: new Date().getTime()\r\n                    })\r\n                    .then(res => {\r\n                        tempShowMessage(`${movie.name} series added successfuly to favorite`,'suc');\r\n                    })\r\n                    .catch(res => tempShowMessage('somethign went wrong!','err'));\r\n                }\r\n                else\r\n                {\r\n                    tempShowMessage(`${movie.name} series is already exists in favorite`,'err');;\r\n                }\r\n            })\r\n            .catch(res => tempShowMessage('somethign went wrong!','err'));\r\n        }\r\n        else\r\n            tempShowMessage(<><Link to=\"/Login\" className=\"loginBTN btn btn-link\">Login</Link> <span>to use this feature</span></>,'err')\r\n    }\r\n\r\n    const tempShowMessage = (msg,type) => {\r\n\r\n        (type === 'suc')?setSucMessage(msg):setErrMessage(msg);\r\n\r\n        setTimeout(() => {\r\n\r\n            setSucMessage('');\r\n            setErrMessage('');\r\n        },5000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"moviesHero text-center\">\r\n            <div className=\"moviesContainer text-center py-4 px-lg-5 container-fluid\">\r\n            <div className=\"parentAlert\" style={(!sucMessage)?{display:'none'}:{display:'block'}}>\r\n                    <div className=\"alert alert-success\" role=\"alert\">\r\n                        <span>{sucMessage}</span>\r\n                    </div>\r\n            </div>\r\n            <div className=\"parentAlert\" style={(!errMessage)?{display:'none'}:{display:'block'}}>\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        <span>{errMessage}</span>\r\n                    </div>\r\n            </div>\r\n                <div className=\"searchMovie my-4\">\r\n                    <label className=\"sr-only\" htmlFor=\"inlineFormInputGroup\">Username</label>\r\n                    <div className=\"input-group mb-2\">\r\n                        <div className=\"input-group-prepend\">\r\n                             <div className=\"input-group-text\"><BiSearch style={{color: '#3C3C3C',fontSize:'1.5rem'}} /></div>\r\n                        </div>\r\n                        <input type=\"text\" ref={inputMovie} onChange={getMovie} className=\"form-control\" id=\"inlineFormInputGroup\" placeholder=\"Find your series ...\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row text-center py-4 px-lg-5\">\r\n                        {movies.sort((a,b) => {\r\n                            if(a.popularity > b.popularity)\r\n                                return -1;\r\n                            else\r\n                                return 1;\r\n                        }).map(movie => {\r\n                            if(movie.vote_average > 0 && movie.vote_count > 0 && movie.poster_path !== null)\r\n                            return(\r\n                            <div className=\"movieCard my-4 text-center col position-relative\" key={Math.random()}>\r\n                                <div className=\"text-center MCSon\">\r\n                                <div className=\"movieOptions\">\r\n                                    <div className=\"movieOptionsCover\"></div>\r\n                                    <span className=\"movieOptionsMenu navbar-toggler-icon\"></span>\r\n                                    <ul className=\"groupsMenu\" ref={(elm) => menusList.current.push(elm)}>\r\n                                        <li onClick={() => showGroups(movie)}><MdGroup className=\"ml-4 mr-2 mb-1\" style={iconsStyle} />Share with groups</li>\r\n                                        <li onClick={() => addToFavorite(movie)}><MdStar className=\"ml-4 mr-2 mb-1\" style={iconsStyle} />Add to favorite</li>\r\n                                    </ul>\r\n                                    {(user)?<ul ref={(elm) => groupsList.current.push(elm)} data-type={movie.id} className=\"groupsList\">\r\n                                    <BsArrowLeft onClick={() => hideGroups(movie)}  style={leftIcon} />\r\n                                        {groups.map(group => (\r\n                                            \r\n                                                <li key={uuidv4()} onClick={() => shareWithGroup(group.id,group.data().name,movie)}>{group.data().name}</li>\r\n                                            \r\n                                                ))}\r\n                                    </ul>:<ul ref={(elm) => groupsList.current.push(elm)} data-type={movie.id} className=\"groupsList d-flex flex-column justify-content-center align-items-center\">\r\n                                    <BsArrowLeft onClick={() => hideGroups(movie)}  style={leftIcon} />\r\n                                            <Link to=\"/Login\" className=\"loginBTN btn\">Login</Link> <span>to use this feature</span>\r\n                                    </ul>}\r\n                                </div>\r\n                                    <img src={(movie.poster_path !== null)?`https://image.tmdb.org/t/p/w300/${movie.poster_path}`:''} alt=\"\"/>\r\n                                    <p className=\"movieDetail\">{movie.name}</p>\r\n                                    <span className=\"movieDetail\"><MdStar className=\"mb-1 mr-1\" style={{color:'gold'}} />{movie.vote_average}</span>\r\n                                </div>\r\n                            </div>)\r\n                        })}\r\n                </div>\r\n                {(inputMovie.current.value === '')?<nav aria-label=\"Page navigation example\" className=\"mt-4\">\r\n                    <ul className=\"pagination justify-content-center\">\r\n                        <li className=\"page-item mx-2\">\r\n                            <a className=\"page-link hideBorder\" aria-label=\"Previous\" onClick={() => {if(currentPage > 1) setCurrentPage(currentPage - 1)}}>\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </a>\r\n                        </li>\r\n                                <li className=\"page-item\"><a className=\"page-link mx-2\" style={((currentPage === 1)?paginationStyle:{})} onClick={() => setCurrentPage(1)}>1</a></li>\r\n                                <li className=\"page-item\"><a className=\"page-link mx-2\" style={((currentPage === 2)?paginationStyle:{})} onClick={() => setCurrentPage(2)}>2</a></li>\r\n                                <li className=\"page-item\"><a className=\"page-link mx-2\" style={((currentPage === 3)?paginationStyle:{})} onClick={() => setCurrentPage(3)}>3</a></li>\r\n                                <li className=\"page-item\"><a className=\"page-link mx-2\" style={((currentPage === 4)?paginationStyle:{})} onClick={() => setCurrentPage(4)}>4</a></li>\r\n                                <li className=\"page-item\"><a className=\"page-link mx-2\" style={((currentPage === 5)?paginationStyle:{})} onClick={() => setCurrentPage(5)}>5</a></li>\r\n                        <li className=\"page-item mx-2\">\r\n                            <a className=\"page-link hideBorder\" aria-label=\"Next\" onClick={() => {if(currentPage < 5) setCurrentPage(currentPage + 1)}}>\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </nav>:''}\r\n                \r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nconst paginationStyle = {\r\n    color: '#3C3C3C',\r\n    backgroundColor: '#f4f4f4'\r\n}\r\nconst iconsStyle = {\r\n    fontSize: '1.3rem'\r\n}\r\nconst leftIcon = {\r\n    position:'absolute',\r\n    left:'10px',\r\n    top:'-10px',\r\n    color: '#f4f4f4',\r\n    fontSize: '2rem',\r\n    cursor: 'pointer'\r\n}\r\n \r\nexport default Series;","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\FavSeries.jsx",["137","138","139"],"import {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { MdStar } from \"react-icons/md\";\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { BiError } from 'react-icons/bi';\r\n\r\nconst FavSeries = (props) => {\r\n\r\n    const {user,firestore} = props;\r\n\r\n    const tmdbKey = '6500ae4de9339a92cbef501c636fc2c0';\r\n    const [movies,setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        getMovies();\r\n    },[]);\r\n\r\n    const getMovies = () => {\r\n\r\n        firestore.collection('Users').doc(user.uid).collection('series').onSnapshot(collection => {\r\n\r\n            setMovies(collection.docs);\r\n        })\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className=\"moviesHero text-center\">\r\n            <div className=\"moviesContainer text-center py-4 px-lg-5 container-fluid\">\r\n                    <div className=\"row text-center py-4 px-lg-5\">\r\n                            {(movies.length !== 0)?movies.map(movie => (\r\n                                <div className=\"movieCard my-4 text-center col position-relative\" key={uuidv4()}>\r\n                                    <div className=\"text-center MCSon\">\r\n                                        <img src={`https://image.tmdb.org/t/p/w300/${movie.data().poster_path}`} alt=\"\"/>\r\n                                        <p className=\"movieDetail\">{movie.data().title}</p>\r\n                                        <span className=\"movieDetail\"><MdStar className=\"mb-1 mr-1\" style={{color:'gold'}} />{movie.data().vote_average}</span>\r\n                                    </div>\r\n                                </div>)\r\n                            ):<div className=\"mx-auto mt-5 text-white-50\"> <BiError style={{fontSize: '42px'}} className=\"mt-5 mb-3\" />  <h5>Sorry, there is no data to display</h5>  </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n     );\r\n}\r\n \r\nexport default FavSeries;","C:\\wamp64\\www\\Projects\\ReactJS_Folder\\share-fun\\src\\components\\GroupSeries.jsx",["140","141","142"],"import {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { MdStar } from \"react-icons/md\";\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { BiError } from 'react-icons/bi';\r\n\r\nconst GroupSeries = (props) => {\r\n\r\n    const {user,firestore,groupID} = props;\r\n\r\n    const [movies,setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        getMovies();\r\n    },[]);\r\n\r\n    const getMovies = () => {\r\n\r\n        firestore.collection('Groups').doc(groupID).collection('series').onSnapshot(collection => {\r\n\r\n            setMovies(collection.docs);\r\n        })\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className=\"moviesHero text-center\">\r\n            <div className=\"moviesContainer text-center py-4 px-lg-5 container-fluid\">\r\n                    <div className=\"row text-center py-4 px-lg-5\">\r\n                            {(movies.length !== 0)?movies.map(movie => (\r\n                                <div className=\"movieCard my-4 text-center col position-relative\" key={uuidv4()}>\r\n                                    <div className=\"text-center MCSon\">\r\n                                        <img src={`https://image.tmdb.org/t/p/w300/${movie.data().poster_path}`} alt=\"\"/>\r\n                                        <p className=\"movieDetail\">{movie.data().title}</p>\r\n                                        <span className=\"movieDetail\"><MdStar className=\"mb-1 mr-1\" style={{color:'gold'}} />{movie.data().vote_average}</span>\r\n                                    </div>\r\n                                </div>)\r\n                            ):<div className=\"mx-auto mt-5 text-white-50\"> <BiError style={{fontSize: '42px'}} className=\"mt-5 mb-3\" />  <h5>Sorry, there is no data to display</h5>  </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n     );\r\n}\r\n \r\nexport default GroupSeries;",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":28,"column":5,"nodeType":"149","endLine":28,"endColumn":7,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":84,"column":13,"nodeType":"153","messageId":"154","endLine":92,"endColumn":14},{"ruleId":"151","severity":1,"message":"152","line":35,"column":13,"nodeType":"153","messageId":"154","endLine":44,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":8,"column":12,"nodeType":"157","messageId":"158","endLine":8,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":16,"column":9,"nodeType":"149","endLine":16,"endColumn":11,"suggestions":"159"},{"ruleId":"155","severity":1,"message":"160","line":21,"column":25,"nodeType":"157","messageId":"158","endLine":21,"endColumn":33},{"ruleId":"147","severity":1,"message":"161","line":32,"column":7,"nodeType":"149","endLine":32,"endColumn":20,"suggestions":"162"},{"ruleId":"147","severity":1,"message":"148","line":37,"column":9,"nodeType":"149","endLine":37,"endColumn":11,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":109,"column":28,"nodeType":"166","messageId":"167","endLine":118,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":262,"column":38,"nodeType":"166","messageId":"170","endLine":262,"endColumn":40},{"ruleId":"171","severity":1,"message":"172","line":296,"column":29,"nodeType":"173","endLine":296,"endColumn":157},{"ruleId":"171","severity":1,"message":"172","line":300,"column":59,"nodeType":"173","endLine":300,"endColumn":172},{"ruleId":"171","severity":1,"message":"172","line":301,"column":59,"nodeType":"173","endLine":301,"endColumn":172},{"ruleId":"171","severity":1,"message":"172","line":302,"column":59,"nodeType":"173","endLine":302,"endColumn":172},{"ruleId":"171","severity":1,"message":"172","line":303,"column":59,"nodeType":"173","endLine":303,"endColumn":172},{"ruleId":"171","severity":1,"message":"172","line":304,"column":59,"nodeType":"173","endLine":304,"endColumn":172},{"ruleId":"171","severity":1,"message":"172","line":306,"column":29,"nodeType":"173","endLine":306,"endColumn":153},{"ruleId":"155","severity":1,"message":"174","line":14,"column":12,"nodeType":"157","messageId":"158","endLine":14,"endColumn":22},{"ruleId":"155","severity":1,"message":"175","line":14,"column":23,"nodeType":"157","messageId":"158","endLine":14,"endColumn":36},{"ruleId":"155","severity":1,"message":"176","line":17,"column":58,"nodeType":"157","messageId":"158","endLine":17,"endColumn":66},{"ruleId":"155","severity":1,"message":"177","line":24,"column":12,"nodeType":"157","messageId":"158","endLine":24,"endColumn":21},{"ruleId":"155","severity":1,"message":"178","line":24,"column":22,"nodeType":"157","messageId":"158","endLine":24,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":29,"column":9,"nodeType":"149","endLine":29,"endColumn":11,"suggestions":"179"},{"ruleId":"164","severity":1,"message":"165","line":83,"column":31,"nodeType":"166","messageId":"167","endLine":99,"endColumn":22},{"ruleId":"155","severity":1,"message":"160","line":9,"column":25,"nodeType":"157","messageId":"158","endLine":9,"endColumn":33},{"ruleId":"147","severity":1,"message":"148","line":15,"column":9,"nodeType":"149","endLine":15,"endColumn":11,"suggestions":"180"},{"ruleId":"155","severity":1,"message":"181","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"182","line":11,"column":11,"nodeType":"157","messageId":"158","endLine":11,"endColumn":18},{"ruleId":"147","severity":1,"message":"183","line":17,"column":7,"nodeType":"149","endLine":17,"endColumn":9,"suggestions":"184"},{"ruleId":"155","severity":1,"message":"181","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":13},{"ruleId":"147","severity":1,"message":"183","line":17,"column":7,"nodeType":"149","endLine":17,"endColumn":9,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":39,"column":109,"nodeType":"173","endLine":39,"endColumn":133},{"ruleId":"155","severity":1,"message":"160","line":9,"column":25,"nodeType":"157","messageId":"158","endLine":9,"endColumn":33},{"ruleId":"147","severity":1,"message":"148","line":16,"column":9,"nodeType":"149","endLine":16,"endColumn":11,"suggestions":"188"},{"ruleId":"155","severity":1,"message":"160","line":21,"column":25,"nodeType":"157","messageId":"158","endLine":21,"endColumn":33},{"ruleId":"147","severity":1,"message":"161","line":32,"column":7,"nodeType":"149","endLine":32,"endColumn":20,"suggestions":"189"},{"ruleId":"147","severity":1,"message":"148","line":37,"column":9,"nodeType":"149","endLine":37,"endColumn":11,"suggestions":"190"},{"ruleId":"164","severity":1,"message":"165","line":109,"column":28,"nodeType":"166","messageId":"167","endLine":118,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":262,"column":38,"nodeType":"166","messageId":"170","endLine":262,"endColumn":40},{"ruleId":"171","severity":1,"message":"172","line":296,"column":29,"nodeType":"173","endLine":296,"endColumn":157},{"ruleId":"171","severity":1,"message":"172","line":300,"column":59,"nodeType":"173","endLine":300,"endColumn":172},{"ruleId":"171","severity":1,"message":"172","line":301,"column":59,"nodeType":"173","endLine":301,"endColumn":172},{"ruleId":"171","severity":1,"message":"172","line":302,"column":59,"nodeType":"173","endLine":302,"endColumn":172},{"ruleId":"171","severity":1,"message":"172","line":303,"column":59,"nodeType":"173","endLine":303,"endColumn":172},{"ruleId":"171","severity":1,"message":"172","line":304,"column":59,"nodeType":"173","endLine":304,"endColumn":172},{"ruleId":"171","severity":1,"message":"172","line":306,"column":29,"nodeType":"173","endLine":306,"endColumn":153},{"ruleId":"155","severity":1,"message":"181","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"182","line":11,"column":11,"nodeType":"157","messageId":"158","endLine":11,"endColumn":18},{"ruleId":"147","severity":1,"message":"183","line":17,"column":7,"nodeType":"149","endLine":17,"endColumn":9,"suggestions":"191"},{"ruleId":"155","severity":1,"message":"181","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":9,"column":12,"nodeType":"157","messageId":"158","endLine":9,"endColumn":16},{"ruleId":"147","severity":1,"message":"183","line":16,"column":7,"nodeType":"149","endLine":16,"endColumn":9,"suggestions":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array.","ArrayExpression",["195"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["196"],"'userData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPopularMovie'. Either include it or remove the dependency array.",["197"],["198"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'userName'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'updateData' is assigned a value but never used.","'setUpdateData' is assigned a value but never used.","'firebase' is assigned a value but never used.","'groupsIDs' is assigned a value but never used.","'setGroupsIDs' is assigned a value but never used.",["199"],["200"],"'axios' is defined but never used.","'tmdbKey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMovies'. Either include it or remove the dependency array.",["201"],["202"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["203"],["204"],["205"],["206"],["207"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},{"desc":"211","fix":"212"},{"desc":"208","fix":"213"},{"desc":"208","fix":"214"},{"desc":"208","fix":"215"},{"desc":"216","fix":"217"},{"desc":"216","fix":"218"},{"desc":"208","fix":"219"},{"desc":"211","fix":"220"},{"desc":"208","fix":"221"},{"desc":"216","fix":"222"},{"desc":"216","fix":"223"},"Update the dependencies array to be: [authState]",{"range":"224","text":"225"},{"range":"226","text":"225"},"Update the dependencies array to be: [currentPage, getPopularMovie]",{"range":"227","text":"228"},{"range":"229","text":"225"},{"range":"230","text":"225"},{"range":"231","text":"225"},"Update the dependencies array to be: [getMovies]",{"range":"232","text":"233"},{"range":"234","text":"233"},{"range":"235","text":"225"},{"range":"236","text":"228"},{"range":"237","text":"225"},{"range":"238","text":"233"},{"range":"239","text":"233"},[1011,1013],"[authState]",[552,554],[1047,1060],"[currentPage, getPopularMovie]",[1121,1123],[1116,1118],[477,479],[426,428],"[getMovies]",[424,426],[531,533],[1047,1060],[1121,1123],[426,428],[379,381]]